{"name": "test_02_phone_error", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test_01_login.TestLogin object at 0x00000000048C8A20>\nlogin_setUp = (<selenium.webdriver.chrome.webdriver.WebDriver (session=\"3e26a850d7dd55f9eb2ef1621cc7dd41\")>, <PageObjct.login_page.LoginPage object at 0x0000000004AB02E8>)\n\n    def test_02_phone_error(self, login_setUp):\n        login_setUp[1].login(error_phone_data_01[\"phone\"], error_phone_data_01[\"pwd\"])\n>       assert error_phone_data_01[\"excepted\"] == login_setUp[1].get_error_phone_text()\n\nTestCases\\test_01_login.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPageObjct\\login_page.py:30: in get_error_phone_text\n    return self.get_text(lp_loc.error_phone, \"登录页面_账号错误提示语\")\nCommon\\basepage.py:128: in get_text\n    self.wait_ele_visiball(loc, img_doc, timeout, poll_frequency)\nCommon\\basepage.py:53: in wait_ele_visiball\n    WebDriverWait(self.driver, timeout, poll_frequency).until(EC.visibility_of_element_located(loc))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"3e26a850d7dd55f9eb2ef1621cc7dd41\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x0000000004AB0B70>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nE:\\python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "attachments": [{"name": "log", "source": "758df111-0bb2-49ff-a854-b0c9dc5733aa-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "6a5ec5d0-b7a5-4072-b52c-70b651bafd75-attachment.txt", "type": "text/plain"}], "start": 1580706668768, "stop": 1580706690907, "uuid": "f5f6adc9-a6b6-4f3b-b9ab-f62e031db089", "historyId": "354836d1e26a1d804fe77c5a90e294e4", "testCaseId": "5a550d4c710f3e22e386791ce163a282", "fullName": "TestCases.test_01_login.TestLogin#test_02_phone_error", "labels": [{"name": "parentSuite", "value": "TestCases"}, {"name": "suite", "value": "test_01_login"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "XZ-20140602GVEE"}, {"name": "thread", "value": "6788-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCases.test_01_login"}]}